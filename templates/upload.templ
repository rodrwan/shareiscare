package templates

// Upload es la página para subir archivos
templ Upload(data UploadData) {
	<div>
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<h1 class="text-2xl font-semibold leading-6 text-gray-900 dark:text-white">Subir archivos</h1>
				<p class="mt-2 text-sm text-gray-700 dark:text-gray-300">
					Desde aquí puedes subir archivos al directorio: <span class="font-medium text-gray-900 dark:text-white">{ data.Directory }</span>
				</p>
			</div>
		</div>

		if data.Success {
			<div class="mt-6 rounded-md bg-green-50 dark:bg-green-900/30 p-4">
				<div class="flex">
					<div class="flex-shrink-0">
						<i class="fas fa-check-circle text-green-400 dark:text-green-500 h-5 w-5"></i>
					</div>
					<div class="ml-3">
						<h3 class="text-sm font-medium text-green-800 dark:text-green-300">Éxito</h3>
						<div class="mt-2 text-sm text-green-700 dark:text-green-400">
							<p>{ data.Message }</p>
						</div>
					</div>
				</div>
			</div>
		} else if data.Message != "" {
			<div class="mt-6 rounded-md bg-red-50 dark:bg-red-900/30 p-4">
				<div class="flex">
					<div class="flex-shrink-0">
						<i class="fas fa-exclamation-circle text-red-400 dark:text-red-500 h-5 w-5"></i>
					</div>
					<div class="ml-3">
						<h3 class="text-sm font-medium text-red-800 dark:text-red-300">Error</h3>
						<div class="mt-2 text-sm text-red-700 dark:text-red-400">
							<p>{ data.Message }</p>
						</div>
					</div>
				</div>
			</div>
		}

		<div x-data="{
			dragOver: false,
			files: [],
			uploading: false,
			handleDrop(e) {
				e.preventDefault();
				this.dragOver = false;
				if (e.dataTransfer.files.length > 0) {
					this.files = e.dataTransfer.files;
					document.getElementById('files').files = e.dataTransfer.files;
				}
			},
			removeFile(index) {
				// No podemos modificar FileList directamente, esto es solo visual
				this.files = Array.from(this.files).filter((_, i) => i !== index);
			},
			submitForm() {
				this.uploading = true;
				document.getElementById('upload-form').submit();
			}
		}" class="mt-8">
			<form
				id="upload-form"
				method="post"
				action="/upload"
				enctype="multipart/form-data"
				@submit="uploading = true"
				class="space-y-8"
			>
				<div
					@dragover.prevent="dragOver = true"
					@dragleave.prevent="dragOver = false"
					@drop="handleDrop"
					:class="{'border-primary-400 bg-primary-50 dark:bg-primary-900/20': dragOver}"
					class="mt-2 flex justify-center rounded-lg border border-dashed border-gray-300 dark:border-gray-700 px-6 py-10 transition-colors duration-200"
				>
					<div class="text-center">
						<i class="fas fa-cloud-upload-alt mx-auto h-12 w-12 text-gray-400 dark:text-gray-500"></i>

						<div class="mt-4 flex text-sm leading-6 text-gray-600 dark:text-gray-400">
							<label for="files" class="relative cursor-pointer rounded-md bg-white dark:bg-slate-800 font-semibold text-primary-600 dark:text-primary-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-primary-600 focus-within:ring-offset-2 hover:text-primary-500 dark:hover:text-primary-400 transition-colors">
								<span>Seleccionar archivos</span>
								<input
									id="files"
									name="files"
									type="file"
									multiple
									@change="files = $event.target.files"
									class="sr-only"
								/>
							</label>
							<p class="pl-1">o arrastra y suelta</p>
						</div>
						<p class="text-xs leading-5 text-gray-600 dark:text-gray-400">Archivos de hasta 32MB</p>
					</div>
				</div>

				<!-- Vista previa de archivos seleccionados -->
				<div x-show="files.length > 0" class="mt-4">
					<h3 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Archivos seleccionados:</h3>
					<ul class="divide-y divide-gray-200 dark:divide-gray-700 border border-gray-200 dark:border-gray-700 rounded-md overflow-hidden">
						<template x-for="(file, index) in Array.from(files)" :key="index">
							<li class="px-4 py-3 flex items-center justify-between bg-white dark:bg-slate-800 hover:bg-gray-50 dark:hover:bg-slate-700/50 transition-colors">
								<div class="flex items-center max-w-xs sm:max-w-lg">
									<i class="fas fa-file text-primary-500 mr-3"></i>
									<span class="text-sm text-gray-900 dark:text-white truncate" x-text="file.name"></span>
								</div>
								<div class="flex items-center">
									<span class="text-xs text-gray-500 dark:text-gray-400 mr-3" x-text="formatBytes(file.size)"></span>
									<button
										type="button"
										@click="removeFile(index)"
										class="text-red-500 hover:text-red-700 dark:hover:text-red-300 transition-colors"
									>
										<i class="fas fa-times"></i>
									</button>
								</div>
							</li>
						</template>
					</ul>
				</div>

				<div class="flex justify-end">
					<a
						href="/"
						class="rounded-md bg-white dark:bg-transparent px-3.5 py-2.5 text-sm font-semibold text-gray-900 dark:text-white shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-700 hover:bg-gray-50 dark:hover:bg-gray-800 mr-3 transition-colors"
					>
						Cancelar
					</a>
					<button
						type="submit"
						:disabled="uploading || files.length === 0"
						:class="{'opacity-50 cursor-not-allowed': uploading || files.length === 0}"
						class="rounded-md bg-primary-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-primary-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600 transition-colors"
					>
						<span x-show="!uploading">
							<i class="fas fa-upload mr-1"></i> Subir
						</span>
						<span x-show="uploading">
							<i class="fas fa-spinner fa-spin mr-1"></i> Subiendo...
						</span>
					</button>
				</div>
			</form>
		</div>
	</div>

	<script>
		function formatBytes(bytes, decimals = 2) {
			if (bytes === 0) return '0 Bytes';

			const k = 1024;
			const dm = decimals < 0 ? 0 : decimals;
			const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];

			const i = Math.floor(Math.log(bytes) / Math.log(k));

			return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
		}
	</script>
}